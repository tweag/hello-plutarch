---

name: template

on:
  push:
    branches:
      - main

jobs:

  sync-template:
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@v3.5.1
        with:
          fetch-depth: 0
          ## A `fetch-depth` of `0` indicates all history for all branches and
          ## tags. This is a fairly brutal way to make sure that we also obtain
          ## the `template` branch.

      - name: Create Temporary Directory
        run: |
          echo 'tmp=${{ runner.temp }}/template' >> "$GITHUB_ENV"
          mkdir '${{ runner.temp }}'/template

      - name: Prepare Template
        run: |
          ## Find everything in the current directory at depth exactly 1. If
          ## they are called `.git` or `.github`, stop exploring them right
          ## away. Otherwise, copy them to `$tmp/`.
          find .                                                      \
            -mindepth 1 -maxdepth 1                                   \
            '('                                                       \
                '(' -name .git -o -name .github ')' -prune            \
                -o -exec cp -R '{}' "$tmp"/ ';'                       \
            ')'

      - name: Create Commit Message
        run: |
          ## We could go for `git commit --message="Follow [...]"` but we are
          ## worried that commit messages might contain single or double quotes.
          echo 'COMMIT_MESSAGE_FILE=${{ runner.temp }}/commit-message' >> "$GITHUB_ENV"
          cat > '${{ runner.temp }}'/commit-message <<\EOF
          Follow ${{ github.sha }}: ${{ github.event.head_commit.message }}
          EOF

      - name: Publish to Branch `template`
        run: |
          ## We act as the GitHub Actions bot on the `template` branch.
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git checkout template
          ## Erase the `template` directory with what has been prepared before.
          rm -R ./template
          cp -R "$tmp" ./template
          ## Add and commit this to the `template` branch if it brought any kind
          ## of change.
          if [ -n "$(git status --porcelain)" ]; then
            git add ./template
            git commit --message="$(cat "$COMMIT_MESSAGE_FILE")"
            git push origin template
          fi
